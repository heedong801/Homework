쿼리 => DB에게 보는 특적한 목적을 가진 명령어 그자체를 통틀어서

SELECT 쿼리문
UPDATE 쿼리문
찾겠다
바꾸겠다
지우겠다.

인덱스 아이디 패스웨드를 찾겠다.
Idx, ID, PW

그 타겟의 모든것
*

서브쿼리
{
FROM 절
그 상황에서 대상을 지정하겠다는 의미를 

WHERE 절
거기에서 조건을 취하는것

and 절
조건을 연속시킬때 사용
}

찾겠다   이것들을   그 대상은 userver2.user 
SELECT Idx, ID, PW FROM     userver2.user WHERE ID = "A";



// db 인젝션 설명

"SELECT Idx, ID, PW FROM userver2.user WHERE ID = " + ID
	// ID 자체를 검증해야 합니다.
	// "SELECT Idx, ID, PW FROM userver2.user WHERE ID = " + ID
	// 으로 직접 내가 인자값을 만들어서 넣어주고 그 쿼리를 실행하는것을
	// 다이나믹 쿼리라고 한다.

	// db 인젝션 이란 악의적인 ID나 PW를 보내서
	// 서버에의 DB에 대한 공격이나 오작동을 일으키려는 목적의 공격을 의미합니다.
	// "A;trancate;";

	SELECT Idx, ID, PW FROM userver2.user WHERE ID = A;trancate;

	// 그걸 막으려고
	// mysql라이브러리가 제공하는 db 인젝션 방어와 안정성을 위해서 제공되는
	// 쿼리 형식을 Fragment 쿼리
	// 인자값을 넣을때 그부분을 ?표로 처리하고 그 ?의 값에대한 방어를
	// 해주는것을 말합니다.
}

SELECT Idx, ID, PW FROM userver2.user WHERE ID = 'a' and PW = 'a';

and는 조건을 연속시킬때 사용할수 있는 쿼리 절이다.

ORM
데이터를 생성한 프로그램이 종료되더라도 사라지지 않는 데이터의 특성을 말한다.
영속성을 갖지 않는 데이터는 단지 메모리에서만 존재하기 때문에 프로그램을 종료하면 모두 잃어버리게 된다.

내가 어떤 프로그램을 만들다가 프로그램이 뚝하고 꺼졌어.
프로그램이 켜질때 DB랑 연결되어 있어

보통 이것때문이다.
DB를 사용하는것도 모르게 db를 쓰게 만들기 위해서 많이 써요.
db를 완전히 자동화해서 사람이 실수하지 않고 자연스럽게 db


insert query가 실패했다고 해서 ai가 증가 안하는 일은 없다.
무조건 증가합니다.


DB 제네레이터란 DB의 모든 테이블 정보를 얻어와서
DB 테이블당 쿼리를 자동으로 만들어주는 프로그램을 말한다.
show fields from user;
같은 쿼리를 사용하여 DB테이블의 메타데이터를 확인하고 그 데이터를 가지고 그 테이블이 필요한 기본적인 쿼리들을
미리 만들어 낼수 있다.